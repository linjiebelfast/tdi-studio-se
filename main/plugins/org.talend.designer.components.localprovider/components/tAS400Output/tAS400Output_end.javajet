<%@ jet
imports="
	org.talend.designer.codegen.config.CodeGeneratorArgument
	org.talend.core.model.process.INode
	org.talend.core.model.process.ElementParameterParser
	org.talend.core.model.process.IConnection
	org.talend.core.model.process.IProcess
	java.util.List
"
%>
<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/Log4j/DBLogUtil.javajet"%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();

	String cid = node.getUniqueName();
	dbLog = new DBLogUtil(node);
	IProcess process = node.getProcess();
	
	String dataAction = ElementParameterParser.getValue(node,"__DATA_ACTION__");

	String commitEvery = ElementParameterParser.getValue(node, "__COMMIT_EVERY__");

	boolean setAutoCommit = false;

	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");

	String useCommitControl = ElementParameterParser.getValue(node,"__USE_COMMIT_CONTROL__");

	boolean useBatchSize = ("true").equals(ElementParameterParser.getValue(node,"__USE_BATCH_SIZE__"));
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
    String rejectConnName = null;
    List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
    if(rejectConns != null && rejectConns.size() > 0) {
        IConnection rejectConn = rejectConns.get(0);
        rejectConnName = rejectConn.getName();
    }
	
    String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
    if(useExistingConn) {
        List<? extends INode> nodes = process.getNodesOfType("tAS400Connection");
        for (INode ne:nodes) {
            if (connection.equals(ne.getUniqueName())) {
                setAutoCommit = "true".equals(ElementParameterParser.getValue(ne, "__AUTO_COMMIT__"));
            }
        }
    }

    boolean useBatch = (rejectConnName == null)
                       && (
                            ("INSERT").equals(dataAction) || ("UPDATE").equals(dataAction) || ("DELETE").equals(dataAction)
                          )
                       && useBatchSize;

    if(("INSERT_OR_UPDATE").equals(dataAction)) {
%>
        if(pstmtUpdate_<%=cid%> != null){
            pstmtUpdate_<%=cid %>.close();
            resourceMap.remove("pstmtUpdate_<%=cid %>");
        }
        if(pstmtInsert_<%=cid %> != null){
            pstmtInsert_<%=cid %>.close();
            resourceMap.remove("pstmtInsert_<%=cid %>");
        }
        if(pstmt_<%=cid %> != null) {
            pstmt_<%=cid %>.close();
            resourceMap.remove("pstmt_<%=cid %>");
        }
<%
    } else if(("UPDATE_OR_INSERT").equals(dataAction)) {
%>
        if(pstmtUpdate_<%=cid%> != null){
            pstmtUpdate_<%=cid %>.close();
            resourceMap.remove("pstmtUpdate_<%=cid %>");
        }
        if(pstmtInsert_<%=cid %> != null){
            pstmtInsert_<%=cid %>.close();
            resourceMap.remove("pstmtInsert_<%=cid %>");
        }
<%
    } else {
%>
      <%
      if (useBatch) {
    	%>
		if (pstmt_<%=cid %> != null && batchSizeCounter_<%=cid%> >0) {
    		<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/DB/batchExecute.javajet"%>
    }
    <%
    }%>
        if(pstmt_<%=cid %> != null) {
            pstmt_<%=cid %>.close();
            resourceMap.remove("pstmt_<%=cid %>");
        }
<%
    }
%>
    resourceMap.put("statementClosed_<%=cid%>", true);
<%
    if(!("true").equals(useExistingConn)) {
        if(("true").equals(useCommitControl)) {
            if(!("").equals(commitEvery) && !("0").equals(commitEvery)) {
                %>
                if(commitCounter_<%=cid%> > 0) {
                	<%dbLog.commit().commitTry(null, dbLog.var("commitCounter"));%>
                    conn_<%=cid%>.commit();
                    <%dbLog.commit().commitDone(null);%>
                }
                <%
            }
        }
        %>
        <%dbLog.conn().closeTry(null);%>
        conn_<%=cid%> .close();
        resourceMap.put("finish_<%=cid%>", true);
        <%dbLog.conn().closeDone(null);%>
        <%
    }
    %>

<%@ include file="../templates/DB/Output/DBOutputEndGlobalVars.javajet"%>
